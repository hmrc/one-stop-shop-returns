# microservice specific routes

POST        /vat-returns                                      controllers.VatReturnController.post()
GET         /vat-returns                                      controllers.VatReturnController.list()
GET         /vat-returns/period/:period                       controllers.VatReturnController.get(period: Period)

POST        /vat-return-with-corrections                      controllers.VatReturnController.postWithCorrection()

GET         /vat-returns/statuses/:commencementDate           controllers.ReturnStatusController.listStatuses(commencementDate: LocalDate)
GET         /vat-returns/current-returns/:vrn                 controllers.ReturnStatusController.getCurrentReturns(vrn: String)

GET         /financial-data/get/:commencementDate             controllers.FinancialDataController.get(commencementDate: LocalDate)
GET         /financial-data/charge/:period                    controllers.FinancialDataController.getCharge(period: Period)

GET         /financial-data/outstanding-payments              controllers.FinancialDataController.getOutstandingAmounts()

GET         /corrections                                      controllers.CorrectionController.list()
GET         /corrections/:period                              controllers.CorrectionController.get(period: Period)
GET         /corrections-for-period/:period                   controllers.CorrectionController.getByCorrectionPeriod(period: Period)
GET         /max-correction-value/:countryCode/:period        controllers.CorrectionController.getCorrectionValue(countryCode: String, period: Period)
POST        /save-for-later                                   controllers.SaveForLaterController.post()
GET         /save-for-later                                   controllers.SaveForLaterController.get()
GET         /save-for-later/delete/:period                    controllers.SaveForLaterController.delete(period:Period)

GET         /financial-data/prepare/:vrn                      controllers.FinancialDataController.prepareFinancialData(vrn: String)

POST        /external-entry/:page                             controllers.external.ExternalEntryController.onExternal(page: String, period: Option[Period] ?= None, lang: Option[String] ?= None)
GET         /external-entry                                   controllers.external.ExternalEntryController.getExternalEntry()

GET         /obligations/:vrn                                 controllers.VatReturnController.getObligations(vrn: String)